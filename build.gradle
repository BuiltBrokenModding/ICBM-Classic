buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
        maven {
            name 'FancyGradle'
            url 'https://gitlab.com/api/v4/projects/26758973/packages/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.+'
        classpath group: 'wtf.gofancy.fancygradle', name: 'wtf.gofancy.fancygradle.gradle.plugin', version: '1.1.0-0'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'wtf.gofancy.fancygradle'


sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

fancyGradle {
    patches {
        resources
        coremods
        asm
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    //Mods
    implementation files('libs/industrialcraft-2-2.8.170-ex112-api.jar')

    //Junit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation files('libs/MinecraftJUnit-1.3.2-deobf.jar')

    //Mockito
    testImplementation 'org.mockito:mockito-inline:4.3.1'
    testImplementation 'org.mockito:mockito-core:4.3.1'
}

idea {
    module {
        testOutputDir = file('output_tests')
        inheritOutputDirs = true
        downloadJavadoc = true
        downloadSources = true
    }
}


minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    accessTransformer = file('src/main/resources/META-INF/ICBMClassic_at.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

test {
    useJUnitPlatform()

    maxHeapSize = '1G'
    failFast = false
    workingDir = './run_tests'
    mkdir './run_tests'
}

jar {
    manifest.mainAttributes(
            "Built-By": System.properties['user.name'],
            "Created-By": "Gradle ${gradle.gradleVersion}",
            'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "FMLAT": "ICBMClassic_at.cfg")
}

repositories {
    mavenCentral()
}
jar.finalizedBy('reobfJar')

task installLocalGitHook(type: Copy){
    from new File(rootProject.rootDir, 'scripts/commit-msg')
    into { new File(rootProject.rootDir, '.git/hooks')}
    fileMode 0775
}

build.dependsOn installLocalGitHook